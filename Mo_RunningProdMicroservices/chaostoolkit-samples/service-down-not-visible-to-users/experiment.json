{
    "title": "System is resilient to provider's failures",
    "description": "Can our consumer survive gracefully a provider's failure?",
    "method": [
        {
            "title": "Checking our system is healthy",
            "probes": {
                "steady": {
                    "title": "All services must be healthy before we begin",
                    "type": "python",
                    "module": "chaosk8s.probes",
                    "func": "all_microservices_healthy",
                    "layer": "kubernetes"
                }
            }
        },
        {
            "title": "Killing the provider abruptly",
            "action": {
                "title": "Let's stop our provider",
                "type": "python",
                "module": "chaosk8s.actions",
                "func": "kill_microservice",
                "layer": "kubernetes",
                "arguments": {
                    "name": "my-provider-service"
                },
                "pauses": {
                    "after": 10
                }
            },
            "probes": {
                "steady": {
                    "title": "Before we kill it, our microservice should be alive",
                    "type": "python",
                    "module": "chaosk8s.probes",
                    "func": "microservice_available_and_healthy",
                    "layer": "kubernetes",
                    "arguments": {
                        "name": "my-provider-service"
                    }
                },
                "close": {
                    "title": "All services must be healthy before we begin",
                    "type": "python",
                    "module": "chaosk8s.probes",
                    "func": "microservice_is_not_available",
                    "layer": "kubernetes",
                    "arguments": {
                        "name": "my-provider-service"
                    }
                }
            }
        },
        {
            "title": "Consumer should not be impacted by provider's failure",
            "probes": {
                "steady": {
                    "title": "Consume should respond as if nothing",
                    "type": "http",
                    "layer": "spring",
                    "url": "http://192.168.99.100:31272/invokeConsumedService"
                }
            }
        }
    ]
}
